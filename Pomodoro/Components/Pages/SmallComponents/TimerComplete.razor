@using Pomodoro.Entities
@inject PomodoroTimer pomodoroTimer

@if(IsShowing)
{
    <div class="overlay">
        <div class="square">
            <div>Congratulazioni per aver completato il timer!</div>
            <button class="btn btn-primary mt-auto mb-3" @onclick="() => 
                {
                    IsShowing = false;
                    InvokeAsync(StateHasChanged);
                }">OK</button>
        </div>
    </div>
}

<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .square {
        width: 200px;
        height: 200px;
        background-color: white;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        border: 2px solid black;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        text-align: center;
        padding: 20px;
    }
</style>

@code {
    public bool IsShowing;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        pomodoroTimer.OnTimerComplete += () =>
        {
            IsShowing = true;
            InvokeAsync(StateHasChanged);
        };
    }
}