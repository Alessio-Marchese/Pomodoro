@page "/settings"
@using Pomodoro.Components.Pages.SmallComponents
@using Pomodoro.Entities
@using Pomodoro.Services
@inject PomodoroTimer pomodoroTimer

<h3>Settings</h3>
<div class="container mt-5">
    <div class="row">
        <div class="col text-center square-col" @onclick="() => SetChangingValue(Production)">
            <p>@Production.Time</p>
        </div>
        <div class="col text-center square-col" @onclick="() => SetChangingValue(ShortPause)">
            <p>@ShortPause.Time</p>
        </div>
        <div class="col text-center square-col" @onclick="() => SetChangingValue(LongPause)">
            <p>@LongPause.Time</p>
        </div>
    </div>
</div>
@if(IsChanging)
{
    <ModifyTimer Value="changingValue.Time" Save="@SaveChangedValue"></ModifyTimer>
}


<style>
    .square-col {
        font-size: 45px;
        text-align: center;
        border: 2px, solid, black;
        margin-left: 5px;
        margin-right: 5px;
    }
</style>

@code{
    private bool IsChanging = false;

    private PomodoroSettings? changingValue;

    private PomodoroSettings Production = new ("Production",Preferences.Get("Production", 25));

    private PomodoroSettings ShortPause = new ("ShortPause", Preferences.Get("ShortPause", 5));

    private PomodoroSettings LongPause = new ("LongPause", Preferences.Get("LongPause", 10));

    private void SaveChangedValue(int newValue)
    {
        if(changingValue.Name.ToUpper().Equals(Production.Name.ToUpper()))
        {
            Production.Time = newValue;
            Preferences.Set("Production", Production.Time);
        }
        else if (changingValue.Name.ToUpper().Equals(ShortPause.Name.ToUpper()))
        {
            ShortPause.Time = newValue;
            Preferences.Set("ShortPause", ShortPause.Time);
        }
        else if (changingValue.Name.ToUpper().Equals(LongPause.Name.ToUpper()))
        {
            LongPause.Time = newValue;
            Preferences.Set("LongPause", LongPause.Time);
        }
        if(pomodoroTimer.Name.ToUpper().Equals(changingValue.Name.ToUpper()))
        {
            pomodoroTimer.EditTime(new TimeSpan(0, 0, 0, newValue, 100));
        }
        IsChanging = false;
    }
    private void SetChangingValue(PomodoroSettings pomodoroTimer)
    {
        changingValue = pomodoroTimer;
        IsChanging = true;
    }
}


