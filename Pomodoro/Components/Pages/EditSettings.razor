@page "/settings"
@using Pomodoro.Components.Layout
@using Pomodoro.Components.Pages.SmallComponents
@using Pomodoro.Entities
@using Pomodoro.Services
@inject PomodoroTimer pomodoroTimer
@inject IStatusBarService StatusBarService
@inject IRingtoneManagerService RingtoneService


<div class="container">
    <p class="top-title">Timer</p>
    <div class="row">
        <div class="col text-center">
            <p class="timer-paragraph">Produzione</p>
            <i class="bi bi-plus-circle-fill top-icon" @onclick="IncreaseProduction"></i>
            <div class="small-square">
                <p>@ProductionTime</p>
            </div>
            <i class="bi bi-dash-circle-fill bottom-icon" @onclick="DecreaseProduction"></i>
        </div>
        <div class="col text-center">
            <p class="timer-paragraph">Pausa Breve</p>
            <i class="bi bi-plus-circle-fill top-icon" @onclick="IncreaseShortPause"></i>
            <div class="small-square">
                <p>@ShortPauseTime</p>
            </div>
            <i class="bi bi-dash-circle-fill bottom-icon" @onclick="DecreaseShortPause"></i>
        </div>
        <div class="col text-center">
            <p class="timer-paragraph">Pausa Lunga</p>
            <i class="bi bi-plus-circle-fill top-icon" @onclick="IncreaseLongPause"></i>
            <div class="small-square">
                <p>@LongPauseTime</p>
            </div>
            <i class="bi bi-dash-circle-fill bottom-icon" @onclick="DecreaseLongPause"></i>
        </div>
    </div>
    <p class="title">Themes</p>
    <div class="row">
        <div class="col big-square" @onclick="SetDarkTheme">
            <i class="bi bi-moon-fill moon-icon"></i>
        </div>
        <div class="col big-square">
            <i class="bi bi-brightness-low-fill sun-icon" @onclick="SetLightTheme"></i>
        </div>
    </div>
    <p class="title">Sound</p>
    <div class="row">
        <div class="col rectangle" @onclick="SetDefaultSound" style="background: @AppStyleConfig.GetDefaultSoundBackground();">
            Default
        </div>
        <div class="col rectangle" @onclick="SetCustomSound" style="background: @AppStyleConfig.GetCustomSoundBackground();">
            Custom
        </div>
    </div>
    <p class="title">Altro</p>
    <div class="row">
        <div class="col rectangle">
            Tutorial
        </div>
    </div>
</div>


<style>
    .top-title {
        text-align: center;
        font-size: 20px;
        font-weight: bolder;
        color: @AppStyleConfig.CurrentThemeItems;
        margin-bottom: 10px;
    }

    .title {
        text-align: center;
        font-size: 20px;
        font-weight: bolder;
        color: @AppStyleConfig.CurrentThemeItems;
        margin-top: 45px;
    }
    .small-square {
        font-size: 45px;
        text-align: center;
        background: rgba(0,0,0,0.1);
        border: 2px solid rgba(0,0,0,0.0);
        border-radius: 5px;
        color: @AppStyleConfig.CurrentThemeItems;
        margin-left: 5px;
        margin-right: 5px;
    }

    .bottom-icon {
        color: @AppStyleConfig.CurrentThemeItems;
        font-size: 35px;
        margin-top: 7px;
    }

    .top-icon {
        color: @AppStyleConfig.CurrentThemeItems;
        font-size: 35px;
        margin-bottom: 7px;
    }

    .big-square {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 140px;
        height: 170px;
        background: rgba(0,0,0,0.1);
        border: 2px solid rgba(0,0,0,0.0);
        border-radius: 5px;
        margin-left: 15px;
        margin-right: 15px;
    }

    .rectangle {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 140px;
        height: 85px;
        border: 2px solid rgba(0,0,0,0.1);
        border-radius: 5px;
        margin-left: 15px;
        margin-right: 15px;
        color: @AppStyleConfig.CurrentThemeItems;
    }

    .timer-paragraph {
        color: @AppStyleConfig.CurrentThemeItems;
        font-weight: bold;
    }

    .sun-icon {
        font-size: 120px;
        color: @AppStyleConfig.GetSunColor();
    }

    .moon-icon {
        font-size: 80px;
        color: @AppStyleConfig.GetMoonColor();
    }

    .sound-square-paragraph {
        font-weight: bolder;
        color: @AppStyleConfig.CurrentThemeItems
    }

    html, body {
        background-color: @AppStyleConfig.CurrentThemeBackground !important;
    }
</style>

@code{
    private int ProductionTime = Preferences.Get("Production", PomodoroTimer.ProductionLength);

    private int ShortPauseTime = Preferences.Get("ShortPause", PomodoroTimer.ShortPauseLength);

    private int LongPauseTime = Preferences.Get("LongPause", PomodoroTimer.LongPauseLength);

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void IncreaseProduction()
    {
        if (ProductionTime + 1 < 100)
        {
            ProductionTime++;
            Preferences.Set("Production", ProductionTime);
            if(pomodoroTimer.Name.ToUpper().Equals("PRODUCTION"))
            {
                pomodoroTimer.UpdateProduction();
            }
        }
    }

    private void DecreaseProduction()
    {
        if (ProductionTime - 1 > 0)
        {
            ProductionTime--;
            Preferences.Set("Production", ProductionTime);
            if (pomodoroTimer.Name.ToUpper().Equals("PRODUCTION"))
            {
                pomodoroTimer.UpdateProduction();
            }
        }
    }

    private void IncreaseShortPause()
    {
        if (ShortPauseTime + 1 < 100)
        {
            ShortPauseTime++;
            Preferences.Set("ShortPause", ShortPauseTime);
            if(pomodoroTimer.Name.ToUpper().Equals("SHORTPAUSE"))
            {
                pomodoroTimer.UpdateShortPause();
            }
        }
    }

    private void DecreaseShortPause()
    {
        if (ShortPauseTime - 1 > 0)
        {
            ShortPauseTime--;
            Preferences.Set("ShortPause", ShortPauseTime);
            if (pomodoroTimer.Name.ToUpper().Equals("SHORTPAUSE"))
            {
                pomodoroTimer.UpdateShortPause();
            }
        }
    }

    private void IncreaseLongPause()
    {
        if (LongPauseTime + 1 < 100)
        {
            LongPauseTime++;
            Preferences.Set("LongPause", LongPauseTime);
            if(pomodoroTimer.Name.ToUpper().Equals("LONGPAUSE"))
            {
                pomodoroTimer.UpdateLongPause();
            }
        }
    }

    private void DecreaseLongPause()
    {
        if (LongPauseTime - 1 > 0)
        {
            LongPauseTime--;
            Preferences.Set("LongPause", LongPauseTime);
            if (pomodoroTimer.Name.ToUpper().Equals("LONGPAUSE"))
            {
                pomodoroTimer.UpdateLongPause();
            }
        }
    }

    private void SetDarkTheme()
    {
        AppStyleConfig.SetDarkTheme();
        NotifyChange.NavBarRefresh();
        StatusBarService.RefreshColor();
    }

    private void SetLightTheme()
    {
        AppStyleConfig.SetLightTheme();
        NotifyChange.NavBarRefresh();
        StatusBarService.RefreshColor();
    }

    private void SetDefaultSound()
    {
        if(pomodoroTimer.IsDefaultSound)
        {
            return;
        }
        pomodoroTimer.IsDefaultSound = true;
        Preferences.Set("IsDefaultSound", 1);
        RingtoneService.PlayCurrentNotificationSound();
    }

    private void SetCustomSound()
    {
        if (!pomodoroTimer.IsDefaultSound)
        {
            return;
        }
        pomodoroTimer.IsDefaultSound = false;
        Preferences.Set("IsDefaultSound", 0);
        RingtoneService.PlayCurrentNotificationSound();
    }
}


