@page "/settings"
@using Pomodoro.Components.Pages.SmallComponents
@using Pomodoro.Entities
@using Pomodoro.Services
@inject PomodoroTimer pomodoroTimer

<h3>Settings</h3>
<div class="container mt-5">
    <div class="row">
        <div class="col text-center square-col" @onclick='() => SetChangingValue(ProductionTime, "Production")'>
            <p>@ProductionTime</p>
        </div>
        <div class="col text-center square-col" @onclick='() => SetChangingValue(ShortPauseTime, "ShortPause")'>
            <p>@ShortPauseTime</p>
        </div>
        <div class="col text-center square-col" @onclick='() => SetChangingValue(LongPauseTime, "LongPause")'>
            <p>@LongPauseTime</p>
        </div>
    </div>
</div>
@if(IsChanging)
{
    <ModifyTimer Value="ChangingTimerValue" Save="@SaveChangedValue"></ModifyTimer>
}


<style>
    .square-col {
        font-size: 45px;
        text-align: center;
        border: 2px, solid, black;
        margin-left: 5px;
        margin-right: 5px;
    }
</style>

@code{
    private bool IsChanging = false;

    private int ProductionTime = Preferences.Get("Production", PomodoroTimer.ProductionLength);

    private int ShortPauseTime = Preferences.Get("ShortPause", PomodoroTimer.ShortPauseLength);

    private int LongPauseTime = Preferences.Get("LongPause", PomodoroTimer.LongPauseLength);

    private int ChangingTimerValue;

    private string ChangingTimerName = String.Empty;

    private void SaveChangedValue(int newValue)
    {
        if(ChangingTimerName.ToUpper().Equals("PRODUCTION"))
        {
            Preferences.Set("Production", newValue);
            ProductionTime = newValue;
            pomodoroTimer.SetProduction();
        }
        else if (ChangingTimerName.ToUpper().Equals("SHORTPAUSE"))
        {
            Preferences.Set("ShortPause", newValue);
            ShortPauseTime = newValue;
            pomodoroTimer.SetShortPause();
        }
        else if (ChangingTimerName.ToUpper().Equals("LONGPAUSE"))
        {
            Preferences.Set("LongPause", newValue);
            LongPauseTime = newValue;
            pomodoroTimer.SetLongPause();
        }
        IsChanging = false;
    }
    private void SetChangingValue(int time, string name)
    {
        ChangingTimerValue = time;
        ChangingTimerName = name;
        IsChanging = true;
    }
}


